openapi: 3.0.0
info:
  description: This is an API of the Awesome Task Exchange System
  version: "1.0.0"
  title: Awesome Task Exchange System API
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: managers
    description: Operations available only to managers
  - name: accountants
    description: Operations available only to accountants
  - name: employee
    description: Operations available to regular employees
paths:
  /v1/tasks:
    get:
      tags:
        - developers
        - managers
        - accountants
      summary: Получить список задач
      operationId: listTasks
      security:
        - bearerAuth: []
      responses:
        200:
          description: Список задач
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListTasksResult"
        401:
          description: Требуется ключ авторизации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        403:
          description: Ошибка аутентификации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
    post:
      tags:
        - developers
        - managers
        - accountants
      summary: Создать задачу
      operationId: createTask
      requestBody:
        description: Данные для создания задачи
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTaskIn"
      responses:
        200:
          description: Задача успешно создана
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskResult"
        400:
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        401:
          description: Требуется ключ авторизации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        403:
          description: Ошибка аутентификации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"

  /v1/tasks/{taskID}:
    parameters:
      - in: path
        name: taskID
        schema:
          type: string
          example: POPUG-1
        required: true
    get:
      tags:
        - developers
        - managers
        - accountants
      summary: Получить информацию о задаче
      operationId: getTask
      security:
        - bearerAuth: []
      responses:
        200:
          description: Задача
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetTaskResult"

        401:
          description: Требуется ключ авторизации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        403:
          description: Ошибка аутентификации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
  /v1/tasks/{taskID}/close:
    parameters:
      - in: path
        name: taskID
        schema:
          type: string
          example: POPUG-1
        required: true
    post:
      tags:
        - developers
        - managers
        - accountants
      summary: Закрыть задачу
      operationId: closeTask
      security:
        - bearerAuth: []
      responses:
        200:
          description: Задача успешно закрыта
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloseTaskResult"
        400:
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        401:
          description: Требуется ключ авторизации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        403:
          description: Ошибка аутентификации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"

  /v1/tasks/assign:
    post:
      tags:
        - managers
      summary: Распределить задачи по исполнителям
      operationId: assignTasks
      security:
        - bearerAuth: []
      responses:
        200:
          description: Задачи успешно распределены по исполнителям
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OkResult"
        400:
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        401:
          description: Требуется ключ авторизации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        403:
          description: Ошибка аутентификации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"

  /v1/tasks/stats:
    post:
      tags:
        - managers
      summary: Получить статистику по стоимости задач
      operationId: getTaskStats
      security:
        - bearerAuth: []
      parameters:
        - name: from
          in: query
          description: Дата начала периода
          schema:
            type: string
            format: date
        - name: to
          in: query
          description: Дата конца периода
          schema:
            type: string
            format: date
      responses:
        200:
          description: Статистика по стоимости задач
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetTaskStatsResult"
        400:
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        401:
          description: Требуется ключ авторизации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        403:
          description: Ошибка аутентификации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"

  /v1/accounts:
    get:
      tags:
        - developers
        - managers
        - accountants
      summary: Получить данные о счетах всех сотрудников
      operationId: getAllAccounts
      security:
        - bearerAuth: []
      responses:
        200:
          description: Счёта сотрудников
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetAllAccountsResult"
        401:
          description: Требуется ключ авторизации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        403:
          description: Ошибка аутентификации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"

  /v1/accounts/my:
    get:
      tags:
        - developers
        - managers
        - accountants
      summary: Информация о собственном счёте сотрудника
      operationId: getMyAccount
      security:
        - bearerAuth: []
      responses:
        200:
          description: Счёт сотрудника
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetMyAccountResult"
        401:
          description: Требуется ключ авторизации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        403:
          description: Ошибка аутентификации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"

  /v1/accounts/summary:
    get:
      tags:
        - managers
        - accountants
      summary: Сводная информация о счетах сотрудников
      operationId: getAccountsSummary
      security:
        - bearerAuth: []
      parameters:
        - name: from
          in: query
          description: Дата начала периода
          schema:
            type: string
            format: date
        - name: to
          in: query
          description: Дата конца периода
          schema:
            type: string
            format: date
      responses:
        200:
          description: Счёт компании
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetAccountsSummaryResult"
        401:
          description: Требуется ключ авторизации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        403:
          description: Ошибка аутентификации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ListTasksResult:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: "#/components/schemas/ListTask"
      required:
        - result

    GetTaskResult:
      type: object
      properties:
        result:
          $ref: "#/components/schemas/Task"
      required:
        - result

    GetMyAccountResult:
      type: object
      properties:
        result:
          $ref: "#/components/schemas/MyAccount"
      required:
        - result

    GetAccountsSummaryResult:
      type: object
      properties:
        result:
          $ref: "#/components/schemas/AccountsSummary"
      required:
        - result

    GetAllAccountsResult:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: "#/components/schemas/UserAccount"
      required:
        - result

    GetTaskStatsResult:
      type: object
      properties:
        result:
          $ref: "#/components/schemas/TaskStats"
      required:
        - result

    CreateTaskIn:
      type: object
      properties:
        description:
          type: string
      required:
        - description

    CreateTaskResult:
      type: object
      properties:
        result:
          $ref: "#/components/schemas/Task"
      required:
        - result

    CloseTaskResult:
      type: object
      properties:
        result:
          $ref: "#/components/schemas/Task"
      required:
        - result

    ListTask:
      type: object
      properties:
        id:
          type: string
        assignee:
          type: string
        status:
          type: string
      required:
        - id
        - assignee
        - status

    Task:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        assignee:
          type: string
        description:
          type: string
      required:
        - id
        - createdAt
        - updatedAt
        - assignee
        - description

    MyAccount:
      type: object
      properties:
        balance:
          type: integer
        auditLog:
          type: array
          items:
            $ref: "#/components/schemas/AuditLogEntry"

    AuditLogEntry:
      type: object
      properties:
        taskID:
          type: string
        action:
          type: string
        dateTime:
          type: string
          format: date-time
        balanceChange:
          type: integer
      required:
        - taskID
        - action
        - dateTime
        - balanceChange

    UserAccount:
      type: object
      properties:
        userID:
          type: string
        balance:
          type: integer

    AccountsSummary:
      type: object
      properties:
        currentBalance:
          type: integer
        balanceByDay:
          type: array
          items:
            $ref: "#/components/schemas/BalanceEntry"

    BalanceEntry:
      type: object
      properties:
        date:
          type: string
          format: date
        balance:
          type: integer
      required:
        - date
        - balance

    TaskStats:
      type: object
      properties:
        mostExpensiveTaskId:
          type: string
          example: "POPUG-1"
        mostExpensiveTaskCost:
          type: integer

    OkResult:
      type: object
      properties:
        result:
          type: object
          properties:
            ok:
              type: boolean
          required:
            - ok
      required:
        - result

    BadRequestError:
      type: object
      properties:
        error:
          type: object
          properties:
            reason:
              type: string
          required:
            - reason
      required:
        - error

    UnauthorizedError:
      type: object
      properties:
        error:
          type: object
          properties:
            reason:
              type: string
          required:
            - reason
      required:
        - error

    ForbiddenError:
      type: object
      properties:
        error:
          type: object
          properties:
            reason:
              type: string
          required:
            - reason
      required:
        - error
